@model Softphone.Models.SettingsBO

<form onsubmit="return false;">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="Id" />
    <div class="form-group row">
        <div class="col-12">
            <label class="text-purple">Channel Automation API Key</label>
            <input type="text" asp-for="ChannelAutomationAPIKey" class="form-control" />
        </div>
    </div>
    <div class="form-group row">
        <div class="col-12">
            <label class="text-purple">Inbound Voice Endpoint</label>
            <input type="text" asp-for="InboundVoiceEndpoint" class="form-control" />
        </div>
    </div>
    <div class="form-group row">
        <div class="col-12">
            <label class="text-purple">Outbound Voice Endpoint</label>
            <input type="text" asp-for="OutboundVoiceEndpoint" class="form-control" />
        </div>
    </div>
    <div class="form-group row">
        <div class="col-12">
            <label class="text-purple">Inbound Call Status Endpoint</label>
            <input type="text" asp-for="InboundCallStatusEndpoint" class="form-control" />
        </div>
    </div>
    <div class="form-group row">
        <div class="col-12">
            <label class="text-purple">Outbound Call Status Endpoint</label>
            <input type="text" asp-for="OutboundCallStatusEndpoint" class="form-control" />
        </div>
    </div>
</form>
<div class="text-center mt-5 mb-1">
    <button class="btn bg-gradient-purple mr-2" onclick="_save(this)"><i class="fas fa-save"></i> Save</button>
    <button class="btn bg-gradient-dark" onclick="_cancel()"><i class="fas fa-times-circle"></i> Cancel</button>
</div>

<script>
    $(function () {
        let form = settingsDialog.find("form");
        initializeFormControls(form);
    });

    function _cancel() {
        settingsDialog.modal("hide");
    }

    function _save(btn) {
        let form = settingsDialog.find("form");
        //Client Validation
        if (form.find("[name=ChannelAutomationAPIKey]").val().trim() == "") {
            form.find("[name=ChannelAutomationAPIKey]").focus();
            toastr.error("Channel Automation API Key is required.", "Error..");
            return false;
        }
        if (form.find("[name=InboundVoiceEndpoint]").val().trim() == "") {
            form.find("[name=InboundVoiceEndpoint]").focus();
            toastr.error("Inbound Voice Endpoint is required.", "Error..");
            return false;
        }
        if (form.find("[name=OutboundVoiceEndpoint]").val().trim() == "") {
            form.find("[name=OutboundVoiceEndpoint]").focus();
            toastr.error("Outbound Voice Endpoint is required.", "Error..");
            return false;
        }
        if (form.find("[name=InboundCallStatusEndpoint]").val().trim() == "") {
            form.find("[name=InboundCallStatusEndpoint]").focus();
            toastr.error("Inbound Call Status Endpoint is required.", "Error..");
            return false;
        }
        if (form.find("[name=OutboundCallStatusEndpoint]").val().trim() == "") {
            form.find("[name=OutboundCallStatusEndpoint]").focus();
            toastr.error("Outbound Call Status Endpoint is required.", "Error..");
            return false;
        }
        //Server Processing
        startAjaxSpinner(btn);
        $.post("@Url.Action("Save")", form.serialize(), function (response) {
            if (errorMessages(response.errors)) return false;
            else {
                settingsDialog.modal("hide");
                toastr.success("Data successfully saved.", "Success!");
            }
        });
        return false;
    }
</script>
