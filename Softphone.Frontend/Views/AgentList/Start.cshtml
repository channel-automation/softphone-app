
<div class="float-sm-right mb-1 mr-2">
    <button class="btn bg-gradient-purple" onclick="editAgent(this, 0)" title="Add New Agent"><i class="fas fa-plus-circle"></i> New</button>
</div>
<div class="mb-1 ml-2">
    <form class="form-inline" onsubmit="return false;">
        @Html.AntiForgeryToken()
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text bg-secondary">Search</span>
            </div>
            <input type="text" name="Search" class="form-control" autocomplete="off" placeholder="Type here.."/>
            <div class="input-group-append">
                <span class="input-group-text bg-secondary"><i class="fas fa-search"></i></span>
            </div>
        </div>
    </form>
</div>
<div class="table-responsive mt-2">
    <table class="table table-bordered table-hover table-sm text-center mb-2" style="width:100%">
        <thead class="thead-light"></thead>
    </table>
</div>

<script>
    $(() => {
        var form = agentListDialog.find("form").first();
        var table = agentListDialog.find("table").first();

        table.DataTable({
            processing: true,
            serverSide: true,
            searching: false,
            lengthChange: false,
            ajax: {
                url: "@Url.Action("Search")", type: "post", datatype: "json",
                data: function (e) {
                    e.workspaceId = globalWorkspaceId;
                    e.search = form.find("[name=Search]").val();
                    e.__RequestVerificationToken = form.find("[name=__RequestVerificationToken]").val();
                }
            },
            columns: [
                    { data: "fullName", title: "Name" },
                    { data: "username", title: "Username" },
                    { data: "twilioNumbers", title: "Twilio Numbers", render: numberRender },
                    { data: "createdAt", title: "Date Added", render: dateTimeRender },
                    { data: "id", orderable: false, render: actionRender }
            ],
            pageLength: 10,
            order: [[0, "asc"]], //Sorted by First Name
            language: { emptyTable: "No data found." },
        });

        form.find("[name=Search]").keyup(function () {
            table.DataTable().draw();
        });
    });

    function numberRender(d) {
        return d.replaceAll(",", "<br />");
    }

    function dateTimeRender(d) {
        let sDate = moment(d).format("MMM DD, YYYY");
        let sTime = moment(d).format("h:mm:ss A");
        return  `${sDate}<br />${sTime}`;
    }

    function actionRender(d) {
        let htm = "";
        htm += "<button class='btn bg-gradient-purple mr-1 mb-1' onclick='editAgent(this, " + d + ")' title='Edit Agent'><i class='fas fa-pencil-alt'></i></button>";
        htm += "<button class='btn bg-gradient-purple mr-1 mb-1' onclick='deleteAgent(this, " + d + ")' title='Delete User'><i class='fas fa-trash'></i></button>";
        return htm;
    }

    function editAgent(btn, id) {
        startAjaxSpinner(btn)
        $.get("@Url.Action("Edit")/" + id, (response) => {
            let title = id == 0 ? "Add" : "Edit";
            editAgentDialog = bootModal(`${title} Agent`, response);
        });
    }
</script>
