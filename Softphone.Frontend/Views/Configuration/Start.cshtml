@model Softphone.Frontend.Models.WorkspaceBO

<form onsubmit="return false;">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="Id" />
    <div class="form-group row">
        <div class="col-12">
            <label class="text-purple">Twilio Account SID</label>
            <input type="text" asp-for="TwilioAccountSID" class="form-control" />
        </div>
    </div>
    <div class="form-group row">
        <div class="col-12">
            <label class="text-purple">Twilio Auth Token</label>
            <input type="text" asp-for="TwilioAuthToken" class="form-control" />
        </div>
    </div>
    <div class="form-group row">
        <div class="col-12">
            <label class="text-purple">Channel Automation API Key</label>
            <input type="text" asp-for="ChannelAutomationAPIKey" class="form-control" />
        </div>
    </div>
    
    <div class="card mt-3">
        <div class="card-header bg-light">
            <h5 class="card-title mb-0">Twilio Webhook Configuration</h5>
        </div>
        <div class="card-body">
            <div class="alert alert-info">
                <i class="fas fa-info-circle"></i> Configure these URLs in your Twilio phone number settings.
            </div>
            <div class="form-group">
                <label class="text-purple">Voice Webhook URL</label>
                <div class="input-group">
                    <input type="text" class="form-control" readonly value="https://backend-production-3d08.up.railway.app/api/voice/inbound" />
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary" type="button" onclick="copyToClipboard(this)">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                </div>
                <small class="text-muted">Set this as the "A Call Comes In" webhook in your Twilio phone number settings.</small>
            </div>
            <div class="form-group">
                <label class="text-purple">Status Callback URL</label>
                <div class="input-group">
                    <input type="text" class="form-control" readonly value="https://backend-production-3d08.up.railway.app/api/voice/status" />
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary" type="button" onclick="copyToClipboard(this)">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                </div>
                <small class="text-muted">Set this as the "Status Callback URL" in your Twilio phone number settings.</small>
            </div>
        </div>
    </div>
</form>
<div class="text-center mt-5 mb-1">
    <button class="btn bg-gradient-purple mr-2" onclick="_save(this)"><i class="fas fa-save"></i> Save</button>
    <button class="btn bg-gradient-dark" onclick="_cancel()"><i class="fas fa-times-circle"></i> Cancel</button>
</div>

<script>
    $(function () {
       // let form = configurationDialog.find("form");
       // initializeFormControls(form);
    });

    function _cancel() {
        //configurationDialog.modal("hide");
        Swal.close(configurationDialog);
    }
    
    function copyToClipboard(btn) {
        const input = $(btn).closest('.input-group').find('input');
        input.select();
        document.execCommand('copy');
        toastr.success('URL copied to clipboard!', 'Success');
    }

    function _save(btn) {
        let form = configurationDialog.find("form");
        //Client Validation
        if (form.find("[name=TwilioAccountSID]").val().trim() == "") {
            form.find("[name=TwilioAccountSID]").focus();
            toastr.error("Twilio Account SID is required.", "Error..");
            return false;
        }
        if (form.find("[name=TwilioAuthToken]").val().trim() == "") {
            form.find("[name=TwilioAuthToken]").focus();
            toastr.error("Twilio Auth Token is required.", "Error..");
            return false;
        }
        if (form.find("[name=ChannelAutomationAPIKey]").val().trim() == "") {
            form.find("[name=ChannelAutomationAPIKey]").focus();
            toastr.error("Channel Automation API Key is required.", "Error..");
            return false;
        }
        //Server Processing
        startAjaxSpinner(btn);
        $.post("@Url.Action("Save")", form.serialize(), function (response) {
            if (errorMessages(response)) return false;
            else {
                //configurationDialog.modal("hide");
                Swal.close(configurationDialog);
                toastr.success("Configuration successfully saved.", "Success!");
            }
        });
        return false;
    }
</script>
